import argparse
from . import probedesign as plp
import pandas as pd
from typing import Literal, Optional
import logging

logger = logging.getLogger(__name__)


# Commands
def find_target(
    selected_features,
    fasta_file,
    output_file,
    reference_fasta,
    min_coverage,
    gc_min=50,
    gc_max=65,
    num_probes=10,
    iupac_mismatches=None,
    max_errors=1,
    check_specificity=False,
    plp_length=30,
    Tm_min=55,
    Tm_max=65,
    lowest_percentile_Tm_score_cutoff=5,
    min_dist_probes=10,
    filter_ligation_junction=True,
    off_target_output=False,
):
    """
    Main function for probe extraction.
    """
    logger.info(f"ðŸ”¹ Loading selected features from {selected_features}...")

    if off_target_output:
        logger.info(
            "ðŸ”¹ Off-target output is enabled. Off-target information will be saved to a separate file."
        )
        targets_df, off_target_info = plp.find_targets(
            selected_features=selected_features,
            fasta_file=fasta_file,
            reference_fasta=reference_fasta,
            plp_length=plp_length,
            min_coverage=min_coverage,
            output_file=output_file,
            gc_min=gc_min,
            gc_max=gc_max,
            num_probes=num_probes,
            iupac_mismatches=iupac_mismatches,
            max_errors=max_errors,
            check_specificity=check_specificity,
            off_target_output=True,
        )
        # Save the off-target information
        off_target_info.to_csv(
            output_file.replace(".tsv", "_off_target.tsv"), sep="\t", index=False
        )
    else:
        targets_df, off_target_info = plp.find_targets(
            selected_features=selected_features,
            fasta_file=fasta_file,
            reference_fasta=reference_fasta,
            plp_length=plp_length,
            min_coverage=min_coverage,
            output_file=output_file,
            gc_min=gc_min,
            gc_max=gc_max,
            num_probes=num_probes,
            iupac_mismatches=iupac_mismatches,
            max_errors=max_errors,
            check_specificity=check_specificity,
            off_target_output=False,
        )

    # Calculate the melting temperature scores
    sequences = targets_df["Sequence"]
    scores = [
        plp.score_padlock_probe(seq, Tm_min=Tm_min, Tm_max=Tm_max) for seq in sequences
    ]
    targets_df["Melt_Tm_scores"] = scores
    # Calculate the suggested cutoff based on the 5th percentile
    suggested_cutoff = plp.analyze_scores(
        scores, percentile=lowest_percentile_Tm_score_cutoff
    )
    # Filter the targets based on the suggested cutoff
    targets_df = targets_df[targets_df["Melt_Tm_scores"] <= suggested_cutoff]
    # Filteer the probes based on the minimum distance between probes
    targets_df = plp.filter_probes_by_distance(
        targets_df, min_dist_probes=min_dist_probes
    )
    # filter the probes based on the ligation junction preferences
    if filter_ligation_junction:
        targets_df = targets_df[targets_df["Ligation junction"] != "non-preferred"]

    targets_df = plp.select_top_probes(targets_df, num_probes)
    # Save the output
    targets_df.to_csv(output_file, sep="\t", index=False)
    return targets_df


def extract_features(
    gtf_file: str,
    output_file: Optional[str] = None,
    genes: Optional[set[str]] = None,
    identifier_type: Literal["gene_id", "gene_name"] = "gene_id",
    gene_feature: str = "CDS",
):
    # Parse the GTF file and filter by gene list
    gtf_df = plp.parse_gtf(gtf_file, genes, identifier_type)

    # Merge regions and calculate coverage
    merged_cov_df = plp.merge_regions_and_coverage(genes, gtf_df)

    if not output_file is None:
        # Write the merged results to an output file
        merged_cov_df.to_csv(output_file, sep="\t", index=False)

        logger.info(f"Results saved to {output_file}")

    return merged_cov_df


def extract_mrna(fasta_file: str, gtf_file: str, output_file: str):
    # Call the extraction function from your package.
    # You can adjust the options below as needed.
    records = plp.extract_mrna_sequences(
        fasta_file=fasta_file,
        gtf_file=gtf_file,
        output_file=output_file,
        plus_strand_only=False,
        revcomp=False,
        translate=False,
        codon_table=1,
        alternative_start_codon=True,
        clean_final_stop=True,
        clean_internal_stop=False,
        verbose=False,
    )

    logger.info(f"Extracted mRNA sequences have been saved to {output_file}")
    return records


def extract_sequences(
    gtf_output: str,
    fasta_file: str,
    output_fasta: str,
    plp_length: int,
    identifier_type: Literal["gene_name", "gene_id"],
    regions_file: str = "regions"
):
    """
    Main function to extract CDS sequences from a pre-processed GTF output.

    Args:
        gtf_output (str): Path to the GTF-derived DataFrame (TSV format).
        fasta_file (str): Path to the indexed FASTA file.
        output_fasta (str): Path to the output FASTA file.
    """
    logger.info(f"ðŸ”¹ Loading GTF output from {gtf_output}...")
    df = pd.read_csv(gtf_output, sep="\t")

    # Ensure FASTA index exists
    plp.check_fasta_index(fasta_file)

    # Save regions for fast retrieval
    plp.save_regions_for_faidx(
        df, regions_file, plp_length, identifier_type=identifier_type
    )

    # Extract sequences
    plp.extract_sequences(fasta_file, regions_file + ".txt", output_fasta, df)


# Argument parsers
def extract_features_parser():
    parser = argparse.ArgumentParser(
        description="Parse GTF file and calculate coverage"
    )
    parser.add_argument("--gtf", required=True, help="Path to the GTF file")
    parser.add_argument("--output", required=True, help="Path to the output file")
    parser.add_argument(
        "--genes",
        type=parse_genes,
        default=None,
        help="Comma-separated list of gene IDs or names to filter",
    )
    parser.add_argument(
        "--identifier_type",
        default="gene_id",
        choices=["gene_id", "gene_name"],
        help="Type of identifier provided ('gene_id' or 'gene_name')",
    )
    parser.add_argument(
        "--gene_feature",
        default="CDS",
        help="Feature type to extract (default = 'CDS')",
    )
    return parser


def extract_mrna_parser():
    parser = argparse.ArgumentParser(
        description="Extract mRNA sequences using a GTF and FASTA file."
    )
    parser.add_argument("--gtf", required=True, help="Path to the GTF file")
    parser.add_argument("--fasta", required=True, help="Path to the FASTA file")
    parser.add_argument(
        "--output_file", required=True, help="Path to the output FASTA file"
    )
    return parser


def find_target_parser():
    parser = argparse.ArgumentParser(
        description=(
            "Extracts probe sequences fulfilling the following criteria:\n"
            "\n"
            "- GC content between 50-65% (default).\n"
            "- Ligation junctions must be 'preferred' or 'neutral' (not 'non-preferred').\n"
            "  See Xenium Custom Panel Design guide:\n"
            "  https://cdn.10xgenomics.com/image/upload/v1716400584/support-documents/CG000683_TechNote_Xenium_Custom_Panel_Design_RevD.pdf\n"
            "\n"
            "  Ligation junction preferences:\n"
            "    Preferred:      AT, TA, GA, AG\n"
            "    Neutral:        TT, CT, CA, TC, AC, CC, TG, AA\n"
            "    Non-Preferred:  CG, GT, GG, GC (filtered out)\n"
            "\n"
            "- No homopolymers of length 3 or more (e.g., AAA, TTT, GGG, CCC).\n"
            "- Minimum coverage of the region is met (default: 1, based on CDS/exon overlap).\n"
            "- The probe size must be an even number (default: 30)."
        ),
        formatter_class=argparse.RawTextHelpFormatter,  # Ensures multiline formatting
    )
    parser.add_argument(
        "--selected_features",
        required=True,
        help="Path to the selected features file (TSV format)",
    )
    parser.add_argument(
        "--fasta_file",
        required=True,
        help="Path to the extracted sequences file (CDS/exons)",
    )
    parser.add_argument("--output_file", required=True, help="Path to the output file")
    parser.add_argument(
        "--reference_fasta",
        required=True,
        help="Path to the reference (genome/transcriptome) FASTA file; Please note that with genome reference, the probe design will be performed on the whole genome which may take a long time.",
    )
    parser.add_argument(
        "--min_coverage", default=1, type=int, help="Minimum coverage of the region"
    )
    parser.add_argument("--gc_min", default=50, type=int, help="Minimum GC content")
    parser.add_argument("--gc_max", default=65, type=int, help="Maximum GC content")
    parser.add_argument(
        "--num_probes", default=10, type=int, help="Number of probes to select"
    )
    parser.add_argument(
        "--iupac_mismatches",
        default=None,
        help="IUPAC mismatches to consider. Note that the number of mismatches should be less than or equal to 2. Example: 5:R,6:A",
    )
    parser.add_argument(
        "--max_errors",
        default=1,
        type=float,
        help="Maximum error rate (or number of errors if an integer, recommended range is 0-6)",
    )
    parser.add_argument(
        "--check_specificity", action="store_true", help="Check probe specificity"
    )
    parser.add_argument(
        "--plp_length", default=30, type=int, help="Minimum probe length"
    )
    parser.add_argument(
        "--Tm_min",
        default=55.0,
        type=float,
        help="Minimum melting temperature for each arm",
    )
    parser.add_argument(
        "--Tm_max",
        default=65.0,
        type=float,
        help="Maximum melting temperature for each arm",
    )
    parser.add_argument(
        "--lowest_percentile_Tm_score_cutoff",
        default=5,
        type=int,
        help="The lowest percentile of the melting temperature score cutoff to filter",
    )
    parser.add_argument(
        "--min_dist_probes",
        default=10,
        type=int,
        help="Minimum distance between probes",
    )
    parser.add_argument(
        "--filter_ligation_junction",
        action="store_true",
        help="Filter probes based on ligation junction preferences; exclude non-preferred",
    )
    parser.add_argument(
        "--off_target_output", action="store_true", help="Output off-target information"
    )
    return parser


def extract_sequences_parser():
    parser = argparse.ArgumentParser(
        description="Extract CDS sequences from an indexed FASTA file"
    )
    parser.add_argument(
        "--gtf_output",
        required=True,
        help="Path to the GTF-derived TSV file (CDS regions)",
    )
    parser.add_argument("--fasta", required=True, help="Path to the indexed FASTA file")
    parser.add_argument(
        "--output_fasta", required=True, help="Path to the output FASTA file"
    )
    parser.add_argument(
        "--identifier_type",
        default="gene_id",
        choices=["gene_id", "gene_name"],
        help="Type of identifier provided ('gene_id' or 'gene_name')",
    )
    parser.add_argument("--plp_length", default=30, help="probe length")
    return parser


# Input parsers
def parse_genes(genes_str: str):
    selected_genes = frozenset([g.strip().lower() for g in genes_str.split(",")])
    unknown_genes = selected_genes - full_gene_set
    if len(unknown_genes) > 0:
        raise ValueError(f"Gene list contains unknown elements: {unknown_genes}")
    return selected_genes


full_gene_set = frozenset(
    {
        gene_id.lower()
        for gene_id in [
            "Arhgap18",
            "Yeats4",
            "Lyz3",
            "Lyz2",
            "Lyz1",
            "Lama2",
            "Cpsf6",
            "Rfx4",
            "Cpm",
            "Ric8b",
            "Fhl4",
            "Tmem263",
            "Mterf2",
            "Cry1",
            "Mdm2",
            "Slc35e3",
            "Ptprk",
            "Themis",
            "Abtb3",
            "Pwp1",
            "Rap1b",
            "Mtcl3",
            "Gm49353",
            "Kifbp",
            "Ddx21",
            "Prdm4",
            "Ascl4",
            "Ddx50",
            "Rtcb",
            "Echdc1",
            "Stox1",
            "Bpifc",
            "Rnf146",
            "Fbxo7",
            "Rspo3",
            "Cenpw",
            "Syn3",
            "Timp3",
            "Mdm1",
            "Ccar1",
            "Il22",
            "Cdc5lrt1",
            "Cdc5lrt4",
            "Trmt11",
            "Il22b",
            "Cdc5lrt5",
            "Cdc5lrt6",
            "Cdc5lrt7",
            "Cdc5lrt8",
            "Cdc5lrt9",
            "Cdc5lrt10",
            "Ifng",
            "Hint3",
            "Tet1",
            "Dyrk2",
            "Slc25a16",
            "Cand1",
            "Dna2",
            "Stab2",
            "Ncoa7",
            "Rufy2",
            "Hey2",
            "Ascl1",
            "Hddc2",
            "Hnrnph3",
            "Pah",
            "Pbld2",
            "Tpd52l1",
            "Rnf217",
            "Igf1",
            "Pmch",
            "Pbld1",
            "Parpbp",
            "Atoh7",
            "Trdn",
            "Nup37",
            "Mypn",
            "Clvs2",
            "Sult3a2",
            "Sult3a1",
            "Washc3",
            "Rsph4a",
            "Dram1",
            "Herc4",
            "Gnptab",
            "Zup1",
            "Sirt1",
            "Rwdd1",
            "Trappc3l",
            "Dnajc12",
            "Calhm4",
            "Rnf7l",
            "Calhm5",
            "Calhm6",
            "Dse",
            "Tspyl1",
            "Ctnna3",
            "Lrrtm3",
            "Chpt1",
            "Sycp3",
            "Reep3",
            "Nt5dc1",
            "Tspyl4",
            "Col10a1",
            "Mybpc1",
            "Frk",
            "Amd2",
            "Spic",
            "Hs3st5",
            "Arl1",
            "Jmjd1c",
            "Hdac2",
            "Nrbf2",
            "Marcks",
            "Rfpl4b",
            "Zfp365",
            "Utp20",
            "Lama4",
            "Slc5a8",
            "Fam229b",
            "Tube1",
            "Rtkn2",
            "Ccn6",
            "Arid5b",
            "Cabcoco1",
            "Tmem26",
            "Ano4",
            "Gas2l3",
            "Hmga2",
            "Nr1h4",
            "Slc17a8",
            "Msrb3",
            "Scyl2",
            "Lemd3",
            "Actr6",
            "Wif1",
            "Tbc1d30",
            "Bltp3b",
            "Gns",
            "Rassf3",
            "Slc16a10",
            "Tbk1",
            "Xpot",
            "Rpf2",
            "Kics2",
            "Gtf3c6",
            "Amd1",
            "Srgap1",
            "Rxylt1",
            "Cdk19",
            "Avpr1a",
            "Slc22a16",
            "Ppm1h",
            "Ddo",
            "Mettl24",
            "Cdc40",
            "Wasf1",
            "Gpr6",
            "Fig4",
            "Ak9",
            "Mon2",
            "Apaf1",
            "Ikbip",
            "Slc25a3",
            "Usp15",
            "Tafa2",
            "Slc16a7",
            "Lrig3",
            "Tmpo",
            "Atp23",
            "Ctdsp2",
            "Avil",
            "Nedd1",
            "Tsfm",
            "Sesn1",
            "Eef1akmt3",
            "Mettl1",
            "Cyp27b1",
            "Marchf9",
            "Armc2",
            "Foxo3",
            "Cdk4",
            "Tspan31",
            "Afg1l",
            "Cdk17",
            "Snx3",
            "Elk3",
            "Nr2e1",
            "Agap2",
            "Lta4h",
            "Ostm1",
            "Os9",
            "Hal",
            "Amdhd1",
            "B4galnt1",
            "Slc26a10",
            "Ccdc38",
            "Snrpf",
            "Sobp",
            "Ntn4",
            "Usp44",
            "Qrsl1",
            "Arhgef25",
            "Rtn4ip1",
            "Dtx3",
            "Pip4k2c",
            "Crybg1",
            "Metap2",
            "Atg5",
            "Kif5a",
            "Prdm1",
            "Dctn2",
            "Prep",
            "Popdc3",
            "Bves",
            "Mbd6",
            "Lin28b",
            "Ddit3",
            "Ddit3",
            "Vezt",
            "Fgd6",
            "Mars1",
            "Hace1",
            "Arhgap9",
            "Gli1",
            "Inhbe",
            "Inhbc",
            "Tmcc3",
            "Grik2",
            "Cep83",
            "Plxnc1",
            "Ascc3",
            "Cradd",
            "Sim1",
            "Socs2",
            "Gm49339",
            "Lilrb4b",
            "Lilrb4a",
            "Fam162b",
            "Btg1",
            "Gprc6a",
            "Dcn",
            "Lum",
            "Kera",
            "Epyc",
            "Ccer1",
            "Rfx6",
            "Vgll2",
            "Atp2b1",
            "Ank3",
            "Dusp6",
            "Csl",
            "Ccdc6",
            "Mrln",
            "Slc16a9",
            "R3hdm2",
            "Ros1",
            "Stac3",
            "Ndufa4l2",
            "Fam13c",
            "Shmt2",
            "Nxph4",
            "Phyhipl",
            "Slc35f1",
            "Cep85l",
            "Pln",
            "Lrp1",
            "Stat6",
            "Bicc1",
            "Mcm9",
            "Nab2",
            "Asf1a",
            "Nemp1",
            "Fam184a",
            "Myo1a",
            "Tfam",
            "Tac2",
            "Zbtb39",
            "Gpr182",
            "Ube2d1",
            "Rdh1",
            "Rdh16f1",
            "Cisd1",
            "Rdh9",
            "Rdh16",
            "Man1a",
            "Rdh19",
            "Rdh16f2",
            "Rdh7",
            "Sdr9c7",
            "Ipmk",
            "Hsd17b6",
            "Tbc1d32",
            "Msl3l2",
            "Gja1",
            "Zwint",
            "Naca",
            "Hsf2",
            "Ptges3",
            "Serinc1",
            "Atp5f1b",
            "Alx1",
            "Pkib",
            "Lrriq1",
            "Fabp7",
            "Smpdl3a",
            "Duxf1",
            "Slc6a15",
            "Duxf4",
            "Tmtc2",
            "Gcc2",
            "Baz2a",
            "Lims1",
            "Rbms2",
            "Ppfia2",
            "Sh3rf3",
            "Gls2",
            "Acss3",
            "Spryd4",
            "Mip",
            "Septin10",
            "Sowahc",
            "Lin7a",
            "Myf5",
            "Myf6",
            "Ptprq",
            "Otogl",
            "P4ha1",
            "Ppp1r12a",
            "Pawr",
            "H60c",
            "Ppp1r14c",
            "Iyd",
            "Syt1",
            "Brcc3dc",
            "Nav3",
            "Plekhg1",
            "E2f7",
            "Timeless",
            "Apon",
            "Apof",
            "Csrp2",
            "Il23a",
            "Mthfd1l",
            "Zdhhc17",
            "Akap12",
            "Zbtb2",
            "Rmnd1",
            "Osbpl8",
            "Bbs10",
            "Armt1",
            "Ccdc170",
            "Pan2",
            "Esr1",
            "Cnpy2",
            "Cs",
            "Coq10a",
            "Ankrd52",
            "Nap1l1",
            "Phlda1",
            "Slc39a5",
            "Krr1",
            "Nabp2",
            "Glipr1",
            "Glipr1l1",
            "Glipr1l2",
            "Glipr1l3",
            "Rnf41",
            "Syne1",
            "Caps2",
            "Myct1",
            "Vip",
            "Kcnc2",
            "Fbxo5",
            "Atxn7l3b",
            "Mtrf1l",
            "Rgs17",
            "Trhde",
            "Tph2",
            "Tbc1d15",
            "Rab21",
            "Smarcc2",
            "Tmem19",
            "Thap2",
            "Zfc3h1",
            "Myl6",
            "Myl6b",
            "Lgr5",
            "Tspan8",
            "Esyt1",
            "Zc3h10",
            "Rpl41",
            "Pa2g4",
            "Erbb3",
            "Rps26",
            "Ikzf4",
            "Suox",
            "Rab5b",
            "Cdk2",
            "Pmel",
            "Dgka",
            "Pym1",
            "Mmp19",
            "Tmem198b",
            "Dnajc14",
            "Cnksr3",
            "Sarnp",
            "Ulbp1",
            "Ormdl2",
            "Or6c208",
            "Or6c5b",
            "Or6c1b",
            "Or6c5c",
            "Or6c3",
            "Or6c7",
            "Ust",
            "Or6c75",
            "Or6c2",
            "Or6c66b",
            "Or6c88",
            "Or10p1",
            "Or6c66",
            "Sash1",
            "Or6c209",
            "Or6c210",
            "Or6c211",
            "Or6c1",
            "Or6c3b",
            "Or6c6c",
            "Or6c212",
            "Or6c213",
            "Or6c214",
            "Or6c65",
            "Or6c76",
            "Or6c69b",
            "Or6c215",
            "Or6c216",
            "Or6c76b",
            "Or6c70",
            "Or6c217",
            "Or6c69",
            "Or6c33",
            "Or6c74",
            "Or6c69c",
            "Or9r3",
            "Or9r7",
            "Or9k2",
            "Or9k2b",
            "Stxbp5",
            "Or9k7",
            "Neurod4",
            "Tespa1",
            "Vmn2r84",
            "Vmn2r85",
            "Vmn2r86",
            "Vmn2r87",
            "Cdh23",
            "Slc29a3",
            "Shprh",
            "Fbxo30",
            "Unc5b",
            "Epm2a",
            "Pcbd1",
            "Sgpl1",
            "Utrn",
            "Stx11",
            "Sf3b5",
            "Tbata",
            "Adamts14",
            "Tysnd1",
            "Aifm2",
            "Plagl1",
            "Macroh2a2",
            "Zc2hc1b",
            "Ltv1",
            "Phactr2",
            "Fuca2",
            "Pex3",
            "Adat2",
            "Aig1",
            "Hivep2",
            "Adgrg6",
            "Vta1",
            "Nmbr",
            "Gje1",
            "Cited2",
            "Txlnb",
            "Heca",
            "Abracl",
            "Reps1",
            "Ect2l",
            "Ccdc28a",
            "Nhsl1",
            "Gm4922",
            "Perp",
            "Tnfaip3",
            "Olig3",
            "Ifngr1",
            "Il22ra2",
            "Il20ra",
            "Slc35d3",
            "Pex7",
            "Map3k5",
            "Map7",
            "Bclaf1",
            "Mtfr2",
            "Pde7b",
            "Ahi1",
            "Myb",
            "Sgk1",
            "Semp2l2b",
            "Raet1e",
            "H60b",
            "Raet1d",
            "Slc2a12",
            "Tbpl1",
            "Gm56675",
            "Tcf21",
            "Stx7",
            "Moxd1",
            "Ccn2",
            "Enpp1",
            "Enpp3",
            "Akap7",
            "Epb41l2",
            "Smlr1",
            "Tmem200a",
            "Samd3",
            "L3mbtl3",
            "Rsph14",
            "Gnaz",
            "Rab36",
            "Bcr",
            "Specc1l",
            "Adora2a",
            "Gucd1",
            "Upb1",
            "Snrpd3",
            "Lrrc75b",
            "Ggt1",
            "Ggt5",
            "Susd2",
            "Cabin1",
            "Ddt",
            "Gm20441",
            "Gstt3",
            "Gstt1",
            "Gstt4",
            "Gstt2",
            "Mif",
            "Derl3",
            "Smarcb1",
            "Mmp11",
            "Slc5a4b",
            "Slc5a4a",
            "Prmt2",
            "S100b",
            "Dip2a",
            "Ftcd",
            "Col6a2",
            "Col6a1",
            "Pcbp3",
            "Slc19a1",
            "Col18a1",
            "Pofut2",
            "Adarb1",
            "Slx9",
            "Itgb2",
            "Pttg1ip",
            "Sumo3",
            "Gm49325",
            "Ube2g2",
            "Tspear",
            "Krtap10-33",
            "Krtap10-28",
            "Krtap12-23",
            "Krtap12-22",
            "Krtap12-21",
            "Krtap12-1",
            "Krtap12-20",
            "Krtap10-32",
            "Krtap10-30",
            "Krtap10-21",
            "Krtap10-22",
            "Krtap10-26",
            "Krtap10-23",
            "Krtap10-25",
            "Krtap10-29",
            "Krtap10-34",
            "Krtap10-27",
            "Krtap10-4",
            "Krtap10-10",
            "Krtap10-35",
            "Krtap10-24",
            "Lrrc3",
            "Trpm2",
            "Cfap410",
            "Pfkl",
            "Aire",
            "Dnmt3l",
            "Icosl",
            "Gatd3a",
            "Pwp2",
            "Trappc10",
            "Agpat3",
            "Gm56820",
            "Rrp1",
            "Cstb",
            "Pdxk",
            "Or10b1",
            "Ilvbl",
            "Syde1",
            "Or1i2",
            "Casp14",
            "Tektl1",
            "Slc1a6",
            "Or7c70",
            "Or7a39",
            "Or7a38",
            "Or7a42",
            "Or7a37",
            "Or7a36",
            "Or7a35",
            "Or7a41",
            "Vmn2r80",
            "Vmn2r81",
            "Vmn2r82",
            "Vmn2r83",
            "Plpp2",
            "Pwwp3a",
            "Ndufs7",
            "Gamt",
            "Dazap1",
            "Rps15",
            "Apc2",
            "Pcsk4",
            "Reep6",
            "Adamtsl5",
            "Plk5",
            "Mex3d",
            "Mbd3",
            "Uqcr11",
            "Tcf3",
            "Onecut3",
            "Atp8b3",
            "Rexo1",
            "Klf16",
            "Abhd17a",
            "Scamp4",
            "Adat3",
            "Gm49322",
            "Csnk1g2",
            "Dot1l",
            "Plekhj1",
            "Sf3a2",
            "Amh",
            "Jsrp1",
            "Lingo3",
            "Lsm7",
            "Sppl2b",
            "Tmprss9",
            "Tle2",
            "Zfp873",
            "BC024063",
            "AU041133",
            "Zfp938",
            "Spata31h1",
            "Gm4924",
            "Chst11",
            "Slc41a2",
            "Nopchap1",
            "Aldh1l2",
            "Washc4",
            "Appl2",
            "Eya4",
            "Sec63",
            "Scml4",
            "Grip1",
            "Helb",
            "Irak3",
            "Tmbim4",
            "Llph",
            "Tdg",
            "Glt8d2",
            "Gdf11",
            "Cd63",
            "Rdh5",
            "Bloc1s1",
            "Tmt1b",
            "Or10p22",
            "Or10p21",
            "Or6c8b",
            "Itga7",
            "Fyn",
            "Traf3ip2",
            "Mfsd4b4",
            "Btbd2",
            "Mknk2",
            "Mob3a",
            "Izumo4",
            "Ap3d1",
            "Med23",
            "Arg1",
            "Mettl25",
            "Ccdc59",
            "Plppr3",
            "Elane",
            "Cfd",
            "Med16",
            "Kiss1r",
            "Arid3a",
            "Wdr18",
            "Grin3b",
            "Tmem259",
            "Cnn2",
            "Rab32",
            "Or6c5",
            "Or6c205",
            "Or6c206",
            "Or6c207",
            "Or6c6b",
            "Or6c68",
            "Or6c35",
            "Or6c6",
            "Ptprr",
            "Spmap2",
            "C2cd4c",
            "Shc2",
            "Cimap1d",
            "Tpgs1",
            "Kitl",
            "Tmtc3",
            "Cep290",
            "Rlig1",
            "Alyreffm11",
            "Alyreffm14",
            "Alyreffm13",
            "Alyreffm16",
            "Alyreffm17",
            "Alyreffm15",
            "Alyreffm10",
            "Alyreffm5",
            "Alyreffm6",
            "Alyreffm7",
            "Alyreffm8",
            "Alyreffm12",
            "Alyreffm9",
            "Anapc15-ps",
            "Madcam1",
            "Timm13",
            "Lmnb2",
            "Gadd45b",
            "Gng7",
            "Diras1",
            "Slc39a3",
            "Sgta",
            "Thop1",
            "Creb3l3",
            "Map2k2",
            "Zbtb7a",
            "Pias4",
            "Eef2",
            "Dapk3",
            "Nmrk2",
            "Atcay",
            "Zfr2",
            "Matk",
            "Mrpl54",
            "Apba3",
            "Ddit4",
            "Anapc16",
            "Ascc1",
            "Spock2",
            "Vsir",
            "Gm17455",
            "Chst3",
            "Lrp11",
            "Nup43",
            "Katna1",
            "Ginm1",
            "Ppil4",
            "Pcmt1",
            "Rab3ip",
            "Best3",
            "Lrrc10",
            "Cct2",
            "Frs2",
            "Mrpl42",
            "Ube2n",
            "Nudt4",
            "Eea1",
            "Atg5lrt",
            "Alyreffm4",
            "Nr2c1",
            "Ndufa12",
            "Or6c219",
            "Or10u4",
            "Or10u3",
            "Gm10310",
            "Rhobtb1",
            "Cdk1",
            "Tle6",
            "BC025920",
            "Sirt6",
            "Ankrd24",
            "Gm10778",
            "Zfp433",
            "Gm3055",
            "Gm4767",
            "Gm32687",
            "Zfp781b",
            "Poc1b",
            "Galnt4",
            "Grm1",
            "Oprm1",
            "Ipcef1",
            "Gzmm",
            "Bsg",
            "Polrmt",
            "Fgf22",
            "Rnf126",
            "Fstl3",
            "Prss57",
            "Palm",
            "Misp",
            "Abca7",
            "Arhgap45",
            "Polr2e",
            "Gpx4",
            "Sbno2",
            "Stk11",
            "Atp5f1d",
            "Midn",
            "Cirbp",
            "Fam174c",
            "Efna2",
            "Dcbld1",
            "Gopc",
            "Nepn",
            "Nus1",
            "Ranbp2",
            "Ccdc138",
            "Edar",
            "Or6c200-ps1",
            "Or6c8",
            "Or6c38",
            "Or6c2b",
            "Or6c201",
            "Or6c202",
            "Or6c203",
            "Or6c204",
            "Or6c63-ps1",
            "Hbs1l",
            "Aldh8a1",
            "Egr2",
            "Ado",
            "Ptprb",
            "Kcnmb4",
            "Cnot2",
            "Myrfl",
            "Lats1",
            "Zc3h12d",
            "Tab2",
            "Rps12",
            "Slc18b1",
            "Vnn3",
            "Vnn1",
            "Taar1",
            "Taar2",
            "Taar3",
            "Taar4",
            "Taar5",
            "Taar6",
            "Taar7a",
            "Taar7b",
            "Taar7d",
            "Taar7e",
            "Taar7f",
            "Taar8a",
            "Taar8b",
            "Taar8c",
            "Taar9",
            "Rev3l",
            "Mfsd4b5",
            "Mfsd4b1",
            "Zbtb24",
            "Mical1",
            "Smpd2",
            "Ppil6",
            "Cd164",
            "Cep57l1",
            "Pdss2",
            "Bend3",
            "Pam16l",
            "Mtres1",
            "Cd24a",
            "Pla2g12b",
            "Oit3",
            "Mcu",
            "Micu1",
            "Dnajb12",
            "Prf1",
            "Pald1",
            "Nodal",
            "Eif4ebp2",
            "Lrrc20",
            "Npffr1",
            "Ppa1",
            "Sar1a",
            "Col13a1",
            "Fam241b",
            "Neurog3",
            "Tspan15",
            "Tacr2",
            "Hk1",
            "Hkdc1",
            "Supv3l1",
            "Vps26a",
            "Srgn",
            "Cdc34",
            "Hcn2",
            "R3hdm4",
            "Tjp3",
            "Pip5k1c",
            "Cactin",
            "Tbxa2r",
            "Gipc3",
            "Hmg20b",
            "Mfsd12",
            "Tektip1",
            "Fzr1",
            "Dohh",
            "Gm48551",
            "Gm48552",
            "Smim24",
            "Nfic",
            "Celf5",
            "Ncln",
            "S1pr4",
            "Gna15",
            "Gna11",
            "Tle5",
            "Nuak1",
            "Ckap4",
            "Tcp11l2",
            "Polr3b",
            "Mgat4c",
            "Nts",
            "Rassf9",
            "Adgb",
            "Nkain2",
            "Ccdc162",
            "Duxf3",
            "Psap",
            "Pcdh15",
            "Gm49918",
            "Krtap10-31",
            "Mier2",
            "Cbarp",
            "Oaz1",
            "Anks1b",
            "Cfap54",
            "Nup107",
            "Prim1",
            "Stat2",
            "Chchd10",
            "Gm867",
            "Vpreb3",
            "Gm5134",
            "Zfp280b",
            "Prtn3",
            "Pcnt",
            "Gm56118",
            "Ybey",
            "Mcm3ap",
            "Lss",
            "Spatc1l",
            "Gm1553",
            "Hcfc2",
            "Nfyb",
            "Txnrd1",
            "Eid3",
            "Ptbp1",
            "Gm49358",
            "Nt5dc3",
            "Uqcc6",
            "Hsp90b1",
            "Ttc41",
            "Samd5",
            "Hebp2",
            "Arfgef3",
        ]
    }
)
